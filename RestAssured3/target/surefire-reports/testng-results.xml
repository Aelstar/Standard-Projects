<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="14" passed="0" failed="0" skipped="14">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-24T10:43:05Z" name="Suite" finished-at="2022-08-24T10:43:06Z" duration-ms="1466">
    <groups>
    </groups>
    <test started-at="2022-08-24T10:43:05Z" name="Test" finished-at="2022-08-24T10:43:06Z" duration-ms="1466">
      <class name="testCases.Extent">
        <test-method is-config="true" signature="ExtentsRep()[pri:0, instance:testCases.Extent@528c868]" started-at="2022-08-24T12:43:05Z" name="ExtentsRep" finished-at="2022-08-24T12:43:05Z" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExtentsRep -->
        <test-method is-config="true" signature="after_Suite()[pri:0, instance:testCases.Extent@528c868]" started-at="2022-08-24T12:43:06Z" name="after_Suite" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Suite -->
      </class> <!-- testCases.Extent -->
      <class name="testCases.LoginTest">
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.LoginTest@545b995e]" started-at="2022-08-24T12:43:05Z" name="before_Method" finished-at="2022-08-24T12:43:05Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.LoginTest.get_Title() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[session not created: This version of ChromeDriver only supports Chrome version 100
Current browser version is 104.0.5112.102 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'A-ABDELSATAR', ip: '10.10.10.35', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00BB7413+2389011]
	Ordinal0 [0x00B49F61+1941345]
	Ordinal0 [0x00A3C658+837208]
	Ordinal0 [0x00A5C773+968563]
	Ordinal0 [0x00A5837A+951162]
	Ordinal0 [0x00A55C51+941137]
	Ordinal0 [0x00A88C80+1150080]
	Ordinal0 [0x00A888DA+1149146]
	Ordinal0 [0x00A83F66+1130342]
	Ordinal0 [0x00A5E546+976198]
	Ordinal0 [0x00A5F456+980054]
	GetHandleVerifier [0x00D69632+1727522]
	GetHandleVerifier [0x00E1BA4D+2457661]
	GetHandleVerifier [0x00C4EB81+569713]
	GetHandleVerifier [0x00C4DD76+566118]
	Ordinal0 [0x00B50B2B+1968939]
	Ordinal0 [0x00B55988+1989000]
	Ordinal0 [0x00B55A75+1989237]
	Ordinal0 [0x00B5ECB1+2026673]
	BaseThreadInitThunk [0x771C0419+25]
	RtlGetAppContainerNamedObjectPath [0x778872ED+237]
	RtlGetAppContainerNamedObjectPath [0x778872BD+189]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 100
Current browser version is 104.0.5112.102 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'A-ABDELSATAR', ip: '10.10.10.35', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00BB7413+2389011]
	Ordinal0 [0x00B49F61+1941345]
	Ordinal0 [0x00A3C658+837208]
	Ordinal0 [0x00A5C773+968563]
	Ordinal0 [0x00A5837A+951162]
	Ordinal0 [0x00A55C51+941137]
	Ordinal0 [0x00A88C80+1150080]
	Ordinal0 [0x00A888DA+1149146]
	Ordinal0 [0x00A83F66+1130342]
	Ordinal0 [0x00A5E546+976198]
	Ordinal0 [0x00A5F456+980054]
	GetHandleVerifier [0x00D69632+1727522]
	GetHandleVerifier [0x00E1BA4D+2457661]
	GetHandleVerifier [0x00C4EB81+569713]
	GetHandleVerifier [0x00C4DD76+566118]
	Ordinal0 [0x00B50B2B+1968939]
	Ordinal0 [0x00B55988+1989000]
	Ordinal0 [0x00B55A75+1989237]
	Ordinal0 [0x00B5ECB1+2026673]
	BaseThreadInitThunk [0x771C0419+25]
	RtlGetAppContainerNamedObjectPath [0x778872ED+237]
	RtlGetAppContainerNamedObjectPath [0x778872BD+189]

	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57)
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:1002)
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:130)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)
	at basic.Config.SetUp.before_Method(SetUp.java:67)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.LoginTest@545b995e]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method signature="get_Title()[pri:0, instance:testCases.LoginTest@545b995e]" started-at="2022-08-24T12:43:06Z" name="get_Title" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_Title -->
        <test-method signature="get_Url()[pri:0, instance:testCases.LoginTest@545b995e]" started-at="2022-08-24T12:43:06Z" name="get_Url" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_Url -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.LoginTest@545b995e]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.LoginTest@545b995e]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
      </class> <!-- testCases.LoginTest -->
      <class name="testCases.Rest1Test">
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="check_Datajson()[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="check_Datajson" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_Datajson -->
        <test-method signature="getPageData()[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="getPageData" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPageData -->
        <test-method signature="check_data2()[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="check_data2" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_data2 -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method signature="getTitle()[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="getTitle" finished-at="2022-08-24T12:43:06Z" duration-ms="15" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle -->
        <test-method signature="check_Status()[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="check_Status" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_Status -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="restTest2Statuscode()[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="restTest2Statuscode" finished-at="2022-08-24T12:43:06Z" duration-ms="7" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restTest2Statuscode -->
        <test-method signature="getURL()[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="getURL" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getURL -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="test_all_rest" data-provider="Provider" finished-at="2022-08-24T12:43:06Z" duration-ms="16" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="test_all_rest" data-provider="Provider" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="test_all_rest" data-provider="Provider" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[byron.fields@reqres.in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="test_all_rest" data-provider="Provider" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="before_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="after_Method" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@31c7528f]" started-at="2022-08-24T12:43:06Z" name="test_all_rest" data-provider="Provider" finished-at="2022-08-24T12:43:06Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
      </class> <!-- testCases.Rest1Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
