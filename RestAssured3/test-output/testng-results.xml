<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="14" passed="0" failed="0" skipped="14">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-22T01:50:03Z" name="Suite" finished-at="2022-04-22T01:50:03Z" duration-ms="497">
    <groups>
    </groups>
    <test started-at="2022-04-22T01:50:03Z" name="Test" finished-at="2022-04-22T01:50:03Z" duration-ms="497">
      <class name="testCases.Extent">
        <test-method is-config="true" signature="ExtentsRep()[pri:0, instance:testCases.Extent@15888343]" started-at="2022-04-22T03:50:02Z" name="ExtentsRep" finished-at="2022-04-22T03:50:03Z" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExtentsRep -->
        <test-method is-config="true" signature="after_Suite()[pri:0, instance:testCases.Extent@15888343]" started-at="2022-04-22T03:50:03Z" name="after_Suite" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Suite -->
      </class> <!-- testCases.Extent -->
      <class name="testCases.LoginTest">
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.LoginTest@2dfaea86]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.LoginTest.get_Title() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Users\ahmed.abdelstar\eclipse-workspace\RestAssured3\TestData\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\ahmed.abdelstar\eclipse-workspace\RestAssured3\TestData\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:132)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:156)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:346)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:91)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)
	at basic.Config.SetUp.before_Method(SetUp.java:67)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="get_Title()[pri:0, instance:testCases.LoginTest@2dfaea86]" started-at="2022-04-22T03:50:03Z" name="get_Title" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_Title -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.LoginTest@2dfaea86]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.LoginTest@2dfaea86]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="get_Url()[pri:0, instance:testCases.LoginTest@2dfaea86]" started-at="2022-04-22T03:50:03Z" name="get_Url" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_Url -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.LoginTest@2dfaea86]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
      </class> <!-- testCases.LoginTest -->
      <class name="testCases.Rest1Test">
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="check_Datajson()[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="check_Datajson" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_Datajson -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="check_Status()[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="check_Status" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_Status -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="check_data2()[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="check_data2" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_data2 -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="getPageData()[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="getPageData" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPageData -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="getTitle()[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="getTitle" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="getURL()[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="getURL" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getURL -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="restTest2Statuscode()[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="restTest2Statuscode" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restTest2Statuscode -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="test_all_rest" data-provider="Provider" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[byron.fields@reqres.in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="test_all_rest" data-provider="Provider" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="test_all_rest" data-provider="Provider" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="test_all_rest" data-provider="Provider" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
        <test-method signature="test_all_rest(java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="test_all_rest" data-provider="Provider" finished-at="2022-04-22T03:50:03Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_all_rest -->
        <test-method is-config="true" signature="before_Method(java.lang.reflect.Method, java.lang.String)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="before_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method -->
        <test-method is-config="true" signature="after_Method(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:testCases.Rest1Test@5b38c1ec]" started-at="2022-04-22T03:50:03Z" name="after_Method" finished-at="2022-04-22T03:50:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_Method -->
      </class> <!-- testCases.Rest1Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
